AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a Security Gateway Auto Scaling Group, an external ALB, and optinally a Smart Managemnt Server and a server Auto Scaling Group
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: General Settings
      Parameters:
      - VPC
      - ServicePort
      - AdminEmail
      - ManagementDeploy
      - ServersDeploy
    - Label:
        default: Check Point Gateway Auto Scaling Group Configuration
      Parameters:
      - GatewaysSubnets
      - GatewaysInstanceType
      - GatewaysKey
      - GatewaysMinSize
      - GatewaysMaxSize
      - GatewaysLicense
      - GatewaysPasswordHash
      - GatewaysSIC
    - Label:
        default: Check Point Smart Management Server Configuration (if you choose to deploy a Smart Management Server this section is mandatory)
      Parameters:
      - ManagementSubnet
      - ManagementInstanceType
      - ManagementKey
      - ManagementPasswordHash 
      - GatewaysPolicy
      - GatewaysBlades
    - Label:
        default: Workload Servers Auto Scaling Group Configuration (if you choose to deploy servers this section is mandatory)
      Parameters:
      - ServersSubnets
      - ServersInstanceType
      - ServersKey
      - ServersAMI
    ParameterLabels:
      ManagementDeploy:
        default: Deploy Smart Management
      VPC:
        default: VPC
      ManagementSubnet:
        default: Subnet
      ManagementInstanceType:
        default: Instance type
      ManagementKey:
        default: Key name
      ManagementPasswordHash:
        default: Password hash
      GatewaysSubnets:
        default: Subnets
      GatewaysInstanceType:
        default: Instance type
      GatewaysKey:
        default: Key name
      GatewaysMinSize:
        default: Minimum group size
      GatewaysMaxSize:
        default: Maximum group size
      AdminEmail:
        default: Email address
      GatewaysPolicy:
        default: Security Policy
      GatewaysBlades:
        default: Default Blades
      GatewaysLicense: 
        default: License
      GatewaysPasswordHash:
        default: Password hash
      GatewaysSIC:
        default: SIC key
      ServicePort:
        default: Service Port
      ServersDeploy:
        default: Deploy Servers
      ServersSubnets:
        default: Subnets
      ServersAMI:
        default: Amazon Image ID
      ServersInstanceType:
        default: Instance Type
      ServersKey:
        default: Key name
Parameters:
  ServicePort:
    Description: The external Application Load Balancer listens to this port
    Type: Number
    Default: 80
    MinValue: 1
  ManagementDeploy:
    Description: Choose 'No' to use an existing Smart Management Server or to deploy one later
    Type: String
    Default: 'Yes'
    AllowedValues:
    - 'Yes'
    - 'No'
  VPC:
    Type: AWS::EC2::VPC::Id
  ManagementSubnet:
    Type: AWS::EC2::Subnet::Id
  ManagementInstanceType:
    Type: String
    Default: m4.xlarge
    AllowedValues:
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m4.16xlarge
    ConstraintDescription: must be a valid EC2 instance type
  ManagementKey:
    Description: The EC2 Key Pair to allow SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
  ManagementPasswordHash:
    Description: Admin user's password hash (use command \"openssl passwd -1 PASSWORD\" to get the PASSWORD's hash) (optional)
    Type: String
    Default: ''
    AllowedPattern: "[\\$\\./a-zA-Z0-9]*"
  GatewaysSubnets:
    Description: Select at least 2 public subnets in the VPC
    Type: List<AWS::EC2::Subnet::Id>
    MinLength: 1
  GatewaysInstanceType:
    Type: String
    Default: c4.xlarge
    AllowedValues:
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    ConstraintDescription: must be a valid EC2 instance type
  GatewaysKey:
    Description: The EC2 Key Pair to allow SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    MinLength: 1
  GatewaysMinSize:
    Default: 2
    Type: Number
    MinValue: 1
  GatewaysMaxSize:
    Default: 10
    Type: Number
    MinValue: 1
  AdminEmail: 
    Description: Notifications about scaling events will be sent to this email address (optional)
    Type: String
    Default: ''
    AllowedPattern: "(|([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?))"
    ConstraintDescription: must be a valid email address
  GatewaysPolicy:
    Description: The name of the Security Policy package to be installed on the Auto Scaling group gateways
    Type: String
    Default: Standard
    MinLength: 1
  GatewaysBlades:
    Description: Turn on/off the Intrusion Prevention, Application Control, Anti-Virus and Anti-Bot Blades (additional Blades can be manually turned on later)
    Type: String
    AllowedValues:
    - 'On'
    - 'Off'
    Default: 'On'
  GatewaysLicense:
    Type: String
    Default: R80.10-BYOL
    AllowedValues:
    - R80.10-BYOL
    - R80.10-PAYG-NGTP
    - R80.10-PAYG-NGTX
  GatewaysPasswordHash:
    Description: Admin user's password hash (use command \"openssl passwd -1 PASSWORD\" to get the PASSWORD's hash) (optional)
    Type: String
    Default: ''
    AllowedPattern: "[\\$\\./a-zA-Z0-9]*"
  GatewaysSIC:
    Description: Secure Internal Communication activation key
    NoEcho: true
    MinLength: 8
    Type: String
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: Secure Internal Communication activation key should contain only alpha numeric characters and be at least 8 characters long
  ServersDeploy:
    Description: Choose 'No' to manually deploy your workload and the internal Load Balancer
    Type: String
    Default: 'No'
    AllowedValues:
    - 'Yes'
    - 'No'
  ServersSubnets:
    Description: Select at least 2 private subnets in the VPC
    Type: List<AWS::EC2::Subnet::Id>
  ServersAMI:
    Type: AWS::EC2::Image::Id
  ServersInstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - t2.xlarge
    - t2.2xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  ServersKey:
    Description: The EC2 Key Pair to allow SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
Conditions:
  EnableBlades: !Equals [!Ref GatewaysBlades, 'On'] 
  DeployManagement: !Equals [!Ref ManagementDeploy, 'Yes']
  DeployServers: !Equals [!Ref ServersDeploy, 'Yes']
Resources:
  ManagementStack:
    Type: AWS::CloudFormation::Stack
    Condition: DeployManagement
    Properties:
      TemplateURL: https://s3.amazonaws.com/CloudFormationTemplate/management.json
      Parameters:
        VPC: !Ref VPC
        Subnet: !Ref ManagementSubnet
        Version: R80.10-BYOL
        InstanceType: !Ref ManagementInstanceType
        Name: !Sub '${AWS::StackName}-Management'
        KeyName: !Ref ManagementKey
        PasswordHash: !Ref ManagementPasswordHash
        BootstrapScript: !Join
        - ','
        - - "sed -i '/template_name/c\template_name: management-quickstart' /etc/cloud-version"
          - !Join
            - ' '
            - - autoprov-cfg -f init AWS -mn
              - !Sub '${AWS::StackName}-Management'
              - -tn
              - !Sub '${AWS::StackName}-Template'
              - -cn
              - !Sub '${AWS::StackName}-Controller' 
              - -po
              - !Ref GatewaysPolicy
              - -otp
              - !Ref GatewaysSIC
              - -r
              - !Ref AWS::Region
              - -ver
              - !Select
                - 0
                - !Split
                  - '-'
                  - !Ref GatewaysLicense
              - -iam
          - !If
            - EnableBlades
            - !Join
              - ' '
              - - \n
                - autoprov-cfg -f set template -tn
                - !Sub '${AWS::StackName}-Template'
                - -ips
                - -appi
                - -av
                - -ab
            - !Ref AWS::NoValue
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Permissive security group
      VpcId: !Ref VPC
      SecurityGroupIngress:
        IpProtocol: -1
        CidrIp: 0.0.0.0/0
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      Port: 8081
      VpcId: !Ref VPC
      Protocol: HTTP
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Subnets: !Ref GatewaysSubnets
      Scheme: internet-facing
      SecurityGroups:
      - !Ref SecurityGroup
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: !Ref ServicePort
      Protocol: HTTP
  AutoScalingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/CloudFormationTemplate/autoscale.json
      Parameters:
        VPC: !Ref VPC
        Subnets: !Join
        - ','
        - !Ref GatewaysSubnets
        MinSize: !Ref GatewaysMinSize
        MaxSize: !Ref GatewaysMaxSize
        ManagementServer: !Sub '${AWS::StackName}-Management'
        ConfigurationTemplate: !Sub '${AWS::StackName}-Template'
        Name: !Sub '${AWS::StackName}-Gateway'
        InstanceType: !Ref GatewaysInstanceType
        AdminEmail: !Ref AdminEmail
        KeyName: !Ref GatewaysKey
        PasswordHash: !Ref GatewaysPasswordHash
        SICKey: !Ref GatewaysSIC
        License: !Ref GatewaysLicense
        TargetGroups: !Ref TargetGroup
        BootstrapScript: "sed -i '/template_name/c\template_name: autoscale-quickstart' /etc/cloud-version"
  ServersTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Condition: DeployServers
    Properties: 
      Port: !Ref ServicePort
      VpcId: !Ref VPC
      Protocol: HTTP
  ServersLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Condition: DeployServers
    Properties:
      IpAddressType: ipv4
      Subnets: !Ref ServersSubnets
      Scheme: internal
      SecurityGroups:
      - !Ref SecurityGroup
      Tags:
      - Key: x-chkp-management
        Value: !Sub '${AWS::StackName}-Management'
      - Key: x-chkp-template
        Value: !Sub '${AWS::StackName}-Template'
  ServersListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Condition: DeployServers
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref ServersTargetGroup
      LoadBalancerArn: !Ref ServersLoadBalancer
      Port: 8081
      Protocol: HTTP
  ServersStack:
    Type: AWS::CloudFormation::Stack
    Condition: DeployServers
    Properties:
      TemplateURL: https://s3.amazonaws.com/CloudFormationTemplate/autoscale-custom.yaml
      Parameters:
        VPC: !Ref VPC
        Subnets: !Join
        - ','
        - !Ref ServersSubnets
        Name: !Sub '${AWS::StackName}-Server'
        ImageId: !Ref ServersAMI
        InstanceType: !Ref ServersInstanceType
        TargetGroups: !Ref ServersTargetGroup
        KeyName: !Ref ServersKey
        MinSize: !Ref GatewaysMinSize
        MaxSize: !Ref GatewaysMaxSize
        AdminEmail: !Ref AdminEmail
Outputs:
  InternalPort:
    Description: The internal Load Balancer should listen to this port
    Value: 8081
  ManagementName:
    Description: The name that represnts the Smart Management Server
    Value: !Sub '${AWS::StackName}-Management'
  ConfigurationTemplateName:
    Description: The name that represents the configuration template. Configurations required to automatically provision the Gateways in the Auto Scaling Group, such as what Security Policy to install and which Blades to enable, will be placed under this template name
    Value: !Sub '${AWS::StackName}-Template'
  ControllerName:
    Description: The name that represents the controller. Configurations required to connect to your AWS environment, such as credentials and regions, will be placed under this controller name
    Value: !Sub '${AWS::StackName}-Controller'
  URL:
    Description: The URL of the external Load Balancer
    Value: !GetAtt
    - LoadBalancer
    - DNSName
