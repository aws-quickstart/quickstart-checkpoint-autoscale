AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a Security Gateway Auto Scaling Group, an external ALB, and optinally a Smart Managemnt Server and a server Auto Scaling Group in a new VPC
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Network Configuration
      Parameters:
      - VpcCidr
      - AvailabilityZones
      - NumberOfAZs
      - PublicSubnetCidrA
      - PublicSubnetCidrB
      - PublicSubnetCidrC
      - PublicSubnetCidrD
      - PrivateSubnetCidrA
      - PrivateSubnetCidrB
      - PrivateSubnetCidrC
      - PrivateSubnetCidrD
    - Label:
        default: General Settings
      Parameters:
      - ServicePort
      - AdminEmail
      - Key
      - ManagementDeploy
      - ServersDeploy
    - Label:
        default: Check Point Gateway Auto Scaling Group Configuration
      Parameters:
      - GatewaysInstanceType
      - GatewaysMinSize
      - GatewaysMaxSize
      - GatewaysLicense
      - GatewaysPasswordHash
      - GatewaysSIC
    - Label:
        default: Check Point Smart Management Server Configuration (ignored if you choose not to deploy a Smart Management Server)
      Parameters:
      - ManagementInstanceType
      - ManagementPasswordHash
      - GatewaysPolicy
      - GatewaysBlades
    - Label:
        default: Workload Servers Auto Scaling Group Configuration (ignored if you choose not to deploy servers)
      Parameters:
      - ServersInstanceType
      - ServersAMI
    - Label:
        default: AWS Quick Start Configuration
      Parameters:
      - QSS3BucketName
      - QSS3KeyPrefix
    ParameterLabels:
      VpcCidr:
        default: VPC CIDR
      NumberOfAZs:
        default: Number of AZs
      AvailabilityZones:
        default: Availability Zones
      PublicSubnetCidrA:
        default: Public Subnet 1
      PublicSubnetCidrB:
        default: Public Subnet 2
      PublicSubnetCidrC:
        default: Public Subnet 3
      PublicSubnetCidrD:
        default: Public Subnet 4
      PrivateSubnetCidrA:
        default: Private Subnet 1
      PrivateSubnetCidrB:
        default: Private Subnet 2
      PrivateSubnetCidrC:
        default: Private Subnet 3
      PrivateSubnetCidrD:
        default: Private Subnet 4
      ManagementDeploy:
        default: Deploy Smart Management
      VPC:
        default: VPC
      ManagementInstanceType:
        default: Instance type
      Key:
        default: Key name
      ManagementPasswordHash:
        default: Password hash
      GatewaysInstanceType:
        default: Instance type
      Key:
        default: Key name
      GatewaysMinSize:
        default: Minimum group size
      GatewaysMaxSize:
        default: Maximum group size
      AdminEmail:
        default: Email address
      GatewaysPolicy:
        default: Security Policy
      GatewaysBlades:
        default: Default Blades
      GatewaysLicense: 
        default: License
      GatewaysPasswordHash:
        default: Password hash
      GatewaysSIC:
        default: SIC key
      ServicePort:
        default: Service Port
      ServersDeploy:
        default: Deploy Servers
      ServersAMI:
        default: AMI
      ServersInstanceType:
        default: Instance Type
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
Parameters:
  VpcCidr:
    Type: String
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Default: '10.0.0.0/16'
  AvailabilityZones:
    Description: 'List of Availability Zones (AZs) to use for the subnets in the VPC. Select at least two.'
    Type: List<AWS::EC2::AvailabilityZone::Name>
    MinLength: 1
  NumberOfAZs:
    Description: Number of Availability Zones to use in the VPC. This must match your selections in the list of Availability Zones parameter.
    Type: String
    Default: 2
    AllowedValues:
    - 2
    - 3
    - 4
  PublicSubnetCidrA:
    Description: The public subnet of the 1st Availability Zone CIDR block. If you choose to deploy a Smart Management Server it will be deployed in this subnet.
    Type: String
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.0.0/24
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  PublicSubnetCidrB:
    Description: The public subnet of the 2nd Availability Zone CIDR block
    Type: String
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.2.0/24
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  PublicSubnetCidrC:
    Description: The public subnet of the 3rd Availability Zone CIDR block
    Type: String
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.4.0/24
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  PublicSubnetCidrD:
    Description: The public subnet of the 4th Availability Zone CIDR block
    Type: String
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.6.0/24
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  PrivateSubnetCidrA:
    Description: The private subnet of the 1st Availability Zone CIDR block
    Type: String
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.1.0/24
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  PrivateSubnetCidrB:
    Description: The private subnet of the 2nd Availability Zone CIDR block
    Type: String
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.3.0/24
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  PrivateSubnetCidrC:
    Description: The private subnet of the 3rd Availability Zone CIDR block
    Type: String
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.5.0/24
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  PrivateSubnetCidrD:
    Description: The private subnet of the 4th Availability Zone CIDR block
    Type: String
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.7.0/24
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  ServicePort:
    Description: The external Application Load Balancer listens to this port
    Type: Number
    Default: 80
    MinValue: 1
  ManagementDeploy:
    Description: Select 'No' to use an existing Smart Management Server or to deploy one later
    Type: String
    Default: 'Yes'
    AllowedValues:
    - 'Yes'
    - 'No'
  ServersDeploy:
    Description: Select 'Yes' to deploy webservers and an internal Load Balancer
    Type: String
    Default: 'No'
    AllowedValues:
    - 'Yes'
    - 'No'
  ManagementInstanceType:
    Type: String
    Default: m4.xlarge
    AllowedValues:
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m4.16xlarge
    ConstraintDescription: must be a valid EC2 instance type
  Key:
    Description: The EC2 Key Pair to allow SSH access to the instances created by this stack
    Type: AWS::EC2::KeyPair::KeyName
  ManagementPasswordHash:
    Description: Admin user's password hash (use command \"openssl passwd -1 PASSWORD\" to get the PASSWORD's hash) (optional)
    Type: String
    Default: ''
    AllowedPattern: "[\\$\\./a-zA-Z0-9]*"
    NoEcho: true
  GatewaysInstanceType:
    Type: String
    Default: c4.xlarge
    AllowedValues:
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    ConstraintDescription: must be a valid EC2 instance type
  GatewaysMinSize:
    Default: 2
    Type: Number
    MinValue: 1
  GatewaysMaxSize:
    Default: 10
    Type: Number
    MinValue: 1
  AdminEmail:
    Description: Notifications about scaling events will be sent to this email address (optional)
    Type: String
    Default: ''
    AllowedPattern: "(|([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?))"
    ConstraintDescription: must be a valid email address
  GatewaysPolicy:
    Description: The name of the Security Policy package to be installed on the Auto Scaling group gateways
    Type: String
    Default: Standard
    MinLength: 1
  GatewaysBlades:
    Description: Turn on/off the Intrusion Prevention System, Application Control, Anti-Virus and Anti-Bot Blades (additional Blades can be manually turned on later)
    Type: String
    AllowedValues:
    - 'On'
    - 'Off'
    Default: 'On'
  GatewaysLicense:
    Type: String
    Default: R80.10-BYOL
    AllowedValues:
    - R80.10-BYOL
    - R80.10-PAYG-NGTP
    - R80.10-PAYG-NGTX
  GatewaysPasswordHash:
    Description: Admin user's password hash (use command \"openssl passwd -1 PASSWORD\" to get the PASSWORD's hash) (optional)
    Type: String
    Default: ''
    AllowedPattern: "[\\$\\./a-zA-Z0-9]*"
    NoEcho: true
  GatewaysSIC:
    Description: Secure Internal Communication activation key
    NoEcho: true
    MinLength: 8
    Type: String
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: Secure Internal Communication activation key should contain only alpha numeric characters and be at least 8 characters long
  ServersAMI:
    Type: String
    Description: The Amazon Machine Image ID used to deploy the servers (e.g. ami-0dc7dc63)
    AllowedPattern: "^(ami-(([0-9a-f]{8})|([0-9a-f]{17})))?$"
  ServersInstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - t2.xlarge
    - t2.2xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  QSS3BucketName:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: michaelshv-bucket
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: "^[0-9a-zA-Z-]+(/[0-9a-zA-Z-]+)*$"
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.
    Default: quickstart
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.
    Type: String
Conditions:
  GovCloud: !Equals [!Ref 'AWS::Region', us-gov-west-1]
  3AZs: !Or
  - !Equals [!Ref NumberOfAZs, 3]
  - !Equals [!Ref NumberOfAZs, 4]
  4AZs: !Equals [!Ref NumberOfAZs, 4]
Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/templates/aws-vpc.json
      Parameters:
        VPCCIDR: !Ref VpcCidr
        AvailabilityZones: !Join
        - ','
        - !Ref AvailabilityZones
        NumberOfAZs: !Ref NumberOfAZs
        PublicSubnet1CIDR: !Ref PublicSubnetCidrA
        PublicSubnet2CIDR: !Ref PublicSubnetCidrB
        PublicSubnet3CIDR: !Ref PublicSubnetCidrC
        PublicSubnet4CIDR: !Ref PublicSubnetCidrD
        PrivateSubnet1ACIDR: !Ref PrivateSubnetCidrA
        PrivateSubnet2ACIDR: !Ref PrivateSubnetCidrB
        PrivateSubnet3ACIDR: !Ref PrivateSubnetCidrC
        PrivateSubnet4ACIDR: !Ref PrivateSubnetCidrD
        KeyPairName: !Ref Key
  MainStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/templates/workload.template
      Parameters:
        VPC: !GetAtt
        - VPCStack
        - Outputs.VPCID
        ServicePort: !Ref ServicePort
        AdminEmail: !Ref AdminEmail
        Key: !Ref Key
        ManagementDeploy: !Ref ManagementDeploy
        ServersDeploy: !Ref ServersDeploy
        GatewaysSubnets: !Join
        - ','
        - - !GetAtt
            - VPCStack
            - Outputs.PublicSubnet1ID
          - !GetAtt
            - VPCStack
            - Outputs.PublicSubnet2ID
          - !If
            - 3AZs
            - !GetAtt
              - VPCStack
              - Outputs.PublicSubnet3ID
            - !Ref AWS::NoValue
          - !If
            - 4AZs
            - !GetAtt
              - VPCStack
              - Outputs.PublicSubnet4ID
            - !Ref AWS::NoValue
        GatewaysInstanceType: !Ref GatewaysInstanceType
        GatewaysMinSize: !Ref GatewaysMinSize
        GatewaysMaxSize: !Ref GatewaysMaxSize
        GatewaysPolicy: !Ref GatewaysPolicy
        GatewaysBlades: !Ref GatewaysBlades
        GatewaysLicense: !Ref GatewaysLicense
        GatewaysPasswordHash: !Ref GatewaysPasswordHash
        GatewaysSIC: !Ref GatewaysSIC
        ManagementInstanceType: !Ref ManagementInstanceType
        ManagementPasswordHash: !Ref ManagementPasswordHash
        ServersSubnets: !Join
        - ','
        - - !GetAtt
            - VPCStack
            - Outputs.PrivateSubnet1AID
          - !GetAtt
            - VPCStack
            - Outputs.PrivateSubnet2AID
          - !If
            - 3AZs
            - !GetAtt
              - VPCStack
              - Outputs.PrivateSubnet3AID
            - !Ref AWS::NoValue
          - !If
            - 4AZs
            - !GetAtt
              - VPCStack
              - Outputs.PrivateSubnet4AID
            - !Ref AWS::NoValue
        ServersInstanceType: !Ref ServersInstanceType
        ServersAMI: !Ref ServersAMI
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
Outputs:
  InternalPort:
    Description: The internal Load Balancer should listen to this port
    Value: !GetAtt
    - MainStack
    - Outputs.InternalPort
  ManagementName:
    Description: The name that represnts the Smart Management Server
    Value: !GetAtt
    - MainStack
    - Outputs.ManagementName
  ConfigurationTemplateName:
    Description: The name that represents the configuration template. Configurations required to automatically provision the Gateways in the Auto Scaling Group, such as what Security Policy to install and which Blades to enable, will be placed under this template name
    Value: !GetAtt
    - MainStack
    - Outputs.ConfigurationTemplateName
  ControllerName:
    Description: The name that represents the controller. Configurations required to connect to your AWS environment, such as credentials and regions, will be placed under this controller name
    Value: !GetAtt
    - MainStack
    - Outputs.ControllerName
  URL:
    Description: The URL of the external Load Balancer
    Value: !GetAtt
    - MainStack
    - Outputs.URL
