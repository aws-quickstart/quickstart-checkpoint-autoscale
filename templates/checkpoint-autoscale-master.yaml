AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a Check Point CloudGuard IaaS Security Gateway Auto Scaling Group, an external ALB/NLB, and optionally a Security Management Server and a web server Auto Scaling Group in a new VPC. (qs-1ofn34qmh)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Network Configuration
      Parameters:
      - VpcCidr
      - AvailabilityZones
      - NumberOfAZs
      - PublicSubnetCidrA
      - PublicSubnetCidrB
      - PublicSubnetCidrC
      - PublicSubnetCidrD
      - PrivateSubnetCidrA
      - PrivateSubnetCidrB
      - PrivateSubnetCidrC
      - PrivateSubnetCidrD
    - Label:
        default: General Settings
      Parameters:
      - KeyPairName
      - Tag
      - AdminEmail
      - AllowUploadDownload
      - ExternalLoadBalancerType
      - Protocol
      - Certificate
      - ServicePort
    - Label:
        default: Check Point CloudGuard IaaS Security Gateways Auto Scaling Group Configuration
      Parameters:
      - GatewaysInstanceType
      - GatewaysMinSize
      - GatewaysMaxSize
      - GatewaysLicense
      - GatewaysPasswordHash
      - GatewaysSIC
    - Label:
        default: Check Point CloudGuard IaaS Security Management Server Configuration
      Parameters:
      - ManagementDeploy
      - ManagementInstanceType
      - ManagementLicense
      - ManagementPasswordHash
      - GatewaysPolicy
      - GatewaysBlades
      - AdminAddressCIDR
      - GatewaysAddresses
    - Label:
        default: Web Servers Auto Scaling Group Configuration
      Parameters:
      - ServersDeploy
      - ServersInstanceType
      - ServersAMI
    - Label:
        default: AWS Quick Start Configuration
      Parameters:
      - QSS3BucketName
      - QSS3KeyPrefix
    ParameterLabels:
      VpcCidr:
        default: VPC CIDR
      NumberOfAZs:
        default: Number of AZs
      AvailabilityZones:
        default: Availability Zones
      PublicSubnetCidrA:
        default: Public Subnet 1
      PublicSubnetCidrB:
        default: Public Subnet 2
      PublicSubnetCidrC:
        default: Public Subnet 3
      PublicSubnetCidrD:
        default: Public Subnet 4
      PrivateSubnetCidrA:
        default: Private Subnet 1
      PrivateSubnetCidrB:
        default: Private Subnet 2
      PrivateSubnetCidrC:
        default: Private Subnet 3
      PrivateSubnetCidrD:
        default: Private Subnet 4
      ManagementDeploy:
        default: Deploy Management Server
      ManagementInstanceType:
        default: Instance type
      ManagementLicense:
        default: License
      KeyPairName:
        default: Key name
      ManagementPasswordHash:
        default: Password hash
      AdminAddressCIDR:
        default: Administrator addresses
      GatewaysAddresses:
        default: Gateways addresses
      Tag:
        default: Auto Provision tag
      GatewaysInstanceType:
        default: Instance type
      GatewaysMinSize:
        default: Minimum group size
      GatewaysMaxSize:
        default: Maximum group size
      AdminEmail:
        default: Email address
      GatewaysPolicy:
        default: Security Policy
      GatewaysBlades:
        default: Default Blades
      GatewaysLicense: 
        default: License
      GatewaysPasswordHash:
        default: Password hash
      GatewaysSIC:
        default: SIC key
      AllowUploadDownload:
        default: Allow upload & download
      Protocol:
        default: Protocol
      Certificate:
        default: HTTPS certificate
      ServicePort:
        default: Custom service port
      ExternalLoadBalancerType:
        default: External Load Balancer
      ServersDeploy:
        default: Deploy servers
      ServersAMI:
        default: AMI ID
      ServersInstanceType:
        default: Instance type
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
Parameters:
  VpcCidr:
    Description: CIDR block for the VPC
    Type: String
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Default: 10.0.0.0/16
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  AvailabilityZones:
    Description: List of Availability Zones (AZs) to use for the subnets in the VPC. Select at least two
    Type: List<AWS::EC2::AvailabilityZone::Name>
    MinLength: 1
  NumberOfAZs:
    Description: Number of Availability Zones to use in the VPC. This must match your selections in the list of Availability Zones parameter
    Type: String
    Default: 2
    AllowedValues:
    - 2
    - 3
    - 4
  PublicSubnetCidrA:
    Description: CIDR block for public subnet 1 located in the 1st Availability Zone. If you choose to deploy a Security Management Server it will be deployed in this subnet
    Type: String
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.0.0/24
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  PublicSubnetCidrB:
    Description: CIDR block for public subnet 2 located in the 2nd Availability Zone
    Type: String
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.2.0/24
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  PublicSubnetCidrC:
    Description: CIDR block for public subnet 3 located in the 3rd Availability Zone
    Type: String
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.4.0/24
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  PublicSubnetCidrD:
    Description: CIDR block for public subnet 4 located in the 4th Availability Zone
    Type: String
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.6.0/24
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  PrivateSubnetCidrA:
    Description: CIDR block for private subnet 1 located in the 1st Availability Zone
    Type: String
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.1.0/24
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  PrivateSubnetCidrB:
    Description: CIDR block for private subnet 2 located in the 2nd Availability Zone
    Type: String
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.3.0/24
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  PrivateSubnetCidrC:
    Description: CIDR block for private subnet 3 located in the 3rd Availability Zone
    Type: String
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.5.0/24
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  PrivateSubnetCidrD:
    Description: CIDR block for private subnet 4 located in the 4th Availability Zone
    Type: String
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.7.0/24
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  Tag:
    Description: The tag is used by the Security Management Server to automatically provision the Security Gateways. Must be up to 12 alphanumeric characters and unique for each Quick Start deployment
    Type: String
    Default: QuickStart
    AllowedPattern: "^[a-zA-Z0-9-]*$"
    MinLength: 1
    MaxLength: 12
    ConstraintDescription: The tag must be up to 12 alphanumeric character
  Protocol:
    Description: The protocol to use
    Type: String
    Default: HTTP
    AllowedValues:
    - HTTP
    - HTTPS
  Certificate:
    Description: Amazon Resource Name (ARN) of an HTTPS Certificate, ignored if the selected protocol is HTTP
    Type: String
    AllowedPattern: "(|arn:aws:[a-z]+::[0-9]{12}:server-certificate/[a-zA-Z0-9-]*)"
    ConstraintDescription: 'Must be a valid Amazon Resource Name (ARN), for example: arn:aws:iam::123456789012:server-certificate/web-server-certificate'
  ServicePort:
    Description: 'The external Load Balancer listens to this port. Leave this field blank to use default ports: 80 for HTTP and 443 for HTTPS'
    Type: String
    AllowedPattern: ^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])?$
    ConstraintDescription: Custom service port must be a number between 0 and 65535
  ExternalLoadBalancerType:
    Description: Use Network Load Balancer if you wish to preserve the source IP address and Application Load Balancer if you wish to perform SSL Offloading
    Default: Network Load Balancer
    Type: String
    AllowedValues:
    - Network Load Balancer
    - Application Load Balancer
  ManagementDeploy:
    Description: Select 'No' to use an existing Security Management Server or to deploy one later and to ignore the other parameters of this section
    Type: String
    Default: 'Yes'
    AllowedValues:
    - 'Yes'
    - 'No'
  ServersDeploy:
    Description: Select 'Yes' to deploy web servers and an internal Application Load Balancer. If you select 'No' the other parameters of this section will be ignored
    Type: String
    Default: 'No'
    AllowedValues:
    - 'Yes'
    - 'No'
  ManagementInstanceType:
    Description: The EC2 instance type of the Security Management Server
    Type: String
    Default: m4.xlarge
    AllowedValues:
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m4.16xlarge
    - t2.xlarge
    - t2.2xlarge
    ConstraintDescription: Must be a valid EC2 instance type
  ManagementLicense:
    Description: The license to install on the Security Management Server
    Type: String
    Default: R80.10-PAYG-MGMT
    AllowedValues:
    - R80.10-BYOL
    - R80.10-PAYG-MGMT
  KeyPairName:
    Description: The EC2 Key Pair to allow SSH access to the instances created by this stack
    Type: AWS::EC2::KeyPair::KeyName
    MinLength: 1
    ConstraintDescription: Must be the name of an existing EC2 KeyPair
  ManagementPasswordHash:
    Description: Admin user's password hash (use command "openssl passwd -1 PASSWORD" to get the PASSWORD's hash) (optional)
    Type: String
    Default: ''
    AllowedPattern: "[\\$\\./a-zA-Z0-9]*"
    NoEcho: true
  AdminAddressCIDR:
    Description: Allow web, SSH, and graphical clients only from this network to communicate with the Security Management Server
    Type: String
    AllowedPattern: "^(([0-9]{1,3}\\.){3}[0-9]{1,3}/([0-9]|[1-2][0-9]|3[0-2]))?$"
  GatewaysAddresses:
    Description: Allow gateways only from this network to communicate with the Security Management Server
    Type: String
    Default: 10.0.0.0/16
    AllowedPattern: "^([0-9]{1,3}\\.){3}[0-9]{1,3}/([0-9]|[1-2][0-9]|3[0-2])$"
  GatewaysInstanceType:
    Description: The EC2 instance type for the Security Gateways
    Type: String
    Default: c4.xlarge
    AllowedValues:
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - t2.xlarge
    - t2.2xlarge
    ConstraintDescription: Must be a valid EC2 instance type
  GatewaysMinSize:
    Description: The minimal number of Security Gateways
    Default: 2
    Type: Number
    MinValue: 1
  GatewaysMaxSize:
    Description: The maximal number of Security Gateways
    Default: 5
    Type: Number
    MinValue: 1
  AdminEmail:
    Description: Notifications about scaling events will be sent to this email address (optional)
    Type: String
    Default: ''
    AllowedPattern: "(|([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?))"
    ConstraintDescription: Must be a valid email address
  GatewaysPolicy:
    Description: The name of the Security Policy package to be installed on the gateways in the Security Gateways Auto Scaling group
    Type: String
    Default: Standard
    MinLength: 1
  GatewaysBlades:
    Description: Turn on/off the Intrusion Prevention System, Application Control, Anti-Virus and Anti-Bot Blades (these and additional Blades can be manually turned on or off later)
    Type: String
    AllowedValues:
    - 'On'
    - 'Off'
    Default: 'On'
  GatewaysLicense:
    Description: The license to install on the Security Gateways
    Type: String
    Default: R80.10-PAYG-NGTX
    AllowedValues:
    - R80.10-BYOL
    - R80.10-PAYG-NGTP
    - R80.10-PAYG-NGTX
  GatewaysPasswordHash:
    Description: Admin user's password hash (use command "openssl passwd -1 PASSWORD" to get the PASSWORD's hash) (optional)
    Type: String
    Default: ''
    AllowedPattern: "[\\$\\./a-zA-Z0-9]*"
    NoEcho: true
  GatewaysSIC:
    Description: The Secure Internal Communication key creates trusted connections between Check Point components. Choose a random string consisting of at least 8 alphanumeric characters
    NoEcho: true
    MinLength: 8
    Type: String
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: Secure Internal Communication activation key should contain only alpha numeric characters and be at least 8 characters long
  AllowUploadDownload:
    Description: Automatically download Blade Contracts and other important data. Improve product experience by sending data to Check Point
    Type: String
    Default: 'No'
    AllowedValues:
    - 'Yes'
    - 'No'
  ServersAMI:
    Description: The Amazon Machine Image ID of a preconfigured web server (e.g. ami-0dc7dc63)
    Type: String
    AllowedPattern: "^(ami-(([0-9a-f]{8})|([0-9a-f]{17})))?$"
  ServersInstanceType:
    Description: The EC2 instance type for the web servers
    Type: String
    Default: t2.micro
    AllowedValues:
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - t2.xlarge
    - t2.2xlarge
    ConstraintDescription: Must be a valid EC2 instance type
  QSS3BucketName:
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: aws-quickstart
    Type: String
  QSS3KeyPrefix:
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-checkpoint-autoscale/
    Type: String
Conditions:
  GovCloudCondition: !Equals [!Ref "AWS::Region", us-gov-west-1]
  3AZs: !Or
  - !Equals [!Ref NumberOfAZs, 3]
  - !Equals [!Ref NumberOfAZs, 4]
  4AZs: !Equals [!Ref NumberOfAZs, 4]
  ALB: !Equals [!Ref ExternalLoadBalancerType, Application Load Balancer]
  NLB: !Equals [!Ref ExternalLoadBalancerType, Network Load Balancer]
Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/CloudFormationTemplate/QuickStart/AutoScaling/vpc.json
      Parameters:
        VPCCIDR: !Ref VpcCidr
        AvailabilityZones: !Join
        - ','
        - !Ref AvailabilityZones
        NumberOfAZs: !Ref NumberOfAZs
        PublicSubnet1CIDR: !Ref PublicSubnetCidrA
        PublicSubnet2CIDR: !Ref PublicSubnetCidrB
        PublicSubnet3CIDR: !Ref PublicSubnetCidrC
        PublicSubnet4CIDR: !Ref PublicSubnetCidrD
        PrivateSubnet1CIDR: !Ref PrivateSubnetCidrA
        PrivateSubnet2CIDR: !Ref PrivateSubnetCidrB
        PrivateSubnet3CIDR: !Ref PrivateSubnetCidrC
        PrivateSubnet4CIDR: !Ref PrivateSubnetCidrD
  MainStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 
      - https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/checkpoint-autoscale.yaml
      - { QSS3Region: !If [GovCloudCondition, s3-us-gov-west-1, s3] }
      Parameters:
        Tag: !Ref Tag
        VPC: !GetAtt
        - VPCStack
        - Outputs.VPCID
        Protocol: !Ref Protocol
        ServicePort: !Ref ServicePort
        Certificate: !Ref Certificate
        ExternalLoadBalancerType: !Ref ExternalLoadBalancerType
        AdminEmail: !Ref AdminEmail
        KeyPairName: !Ref KeyPairName
        ManagementDeploy: !Ref ManagementDeploy
        ServersDeploy: !Ref ServersDeploy
        GatewaysSubnets: !Join
        - ','
        - - !GetAtt
            - VPCStack
            - Outputs.PublicSubnet1ID
          - !GetAtt
            - VPCStack
            - Outputs.PublicSubnet2ID
          - !If
            - 3AZs
            - !GetAtt
              - VPCStack
              - Outputs.PublicSubnet3ID
            - !Ref AWS::NoValue
          - !If
            - 4AZs
            - !GetAtt
              - VPCStack
              - Outputs.PublicSubnet4ID
            - !Ref AWS::NoValue
        GatewaysInstanceType: !Ref GatewaysInstanceType
        GatewaysMinSize: !Ref GatewaysMinSize
        GatewaysMaxSize: !Ref GatewaysMaxSize
        GatewaysPolicy: !Ref GatewaysPolicy
        GatewaysBlades: !Ref GatewaysBlades
        GatewaysLicense: !Ref GatewaysLicense
        GatewaysPasswordHash: !Ref GatewaysPasswordHash
        GatewaysSIC: !Ref GatewaysSIC
        AllowUploadDownload: !Ref AllowUploadDownload
        ManagementInstanceType: !Ref ManagementInstanceType
        ManagementLicense: !Ref ManagementLicense
        ManagementPasswordHash: !Ref ManagementPasswordHash
        AdminAddressCIDR: !Ref AdminAddressCIDR
        GatewaysAddresses: !Ref GatewaysAddresses
        ServersSubnets: !Join
        - ','
        - - !GetAtt
            - VPCStack
            - Outputs.PrivateSubnet1ID
          - !GetAtt
            - VPCStack
            - Outputs.PrivateSubnet2ID
          - !If
            - 3AZs
            - !GetAtt
              - VPCStack
              - Outputs.PrivateSubnet3ID
            - !Ref AWS::NoValue
          - !If
            - 4AZs
            - !GetAtt
              - VPCStack
              - Outputs.PrivateSubnet4ID
            - !Ref AWS::NoValue
        ServersInstanceType: !Ref ServersInstanceType
        ServersAMI: !Ref ServersAMI
Outputs:
  InternalPort:
    Description: The internal Load Balancer should listen to this port
    Value: !GetAtt
    - MainStack
    - Outputs.InternalPort
  ManagementName:
    Description: The name that represents the Security Management Server
    Value: !GetAtt
    - MainStack
    - Outputs.ManagementName
  ConfigurationTemplateName:
    Description: The name that represents the configuration template. Configurations required to automatically provision the Gateways in the Auto Scaling Group, such as what Security Policy to install and which Blades to enable, will be placed under this template name
    Value: !GetAtt
    - MainStack
    - Outputs.ConfigurationTemplateName
  ControllerName:
    Description: The name that represents the controller. Configurations required to connect to your AWS environment, such as credentials and regions, will be placed under this controller name
    Value: !GetAtt
    - MainStack
    - Outputs.ControllerName
  ALBURL:
    Description: The URL of the external Application Load Balancer
    Condition: ALB
    Value: !GetAtt
    - MainStack
    - Outputs.ALBURL
  NLBURL:
    Description: The URL of the external Network Load Balancer
    Condition: NLB
    Value: !GetAtt
    - MainStack
    - Outputs.NLBURL
